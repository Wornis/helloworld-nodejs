steps:
#  #Will pull the production image for using his layers for a faster build
#  - name: 'gcr.io/cloud-builders/docker'
#    id: 'Pull latest image'
#    entrypoint: 'bash'
#    args: [
#      '-c',
#      'docker pull gcr.io/$PROJECT_ID/$REPO_NAME:latest || exit 0'
#    ]

  # This step builds the container image and tag them.
  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/$REPO_NAME:latest'
      - '.'

# Update Image Tag
  - name: ubuntu
    id: 'Settings Tag And Repo Name on Deployment File'
    args: [
      'bash', '-c',
      '"sed -e "s,__IMAGE_TAG,$SHORT_SHA,"',
      '-e "s,__REPO_NAME,$REPO_NAME,"',
      'deployment.yaml" > /workspace/deployment_production.yaml'
    ]

  # Apply the configuration yaml of our application.
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'Apply configuration to Kubernetes'
    args: ['apply', '-f', '/workspace/deployment_production.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-west1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster'

# push images to Google Container Registry with tags
images: [
  'gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA',
  'gcr.io/$PROJECT_ID/$REPO_NAME:latest'
]
